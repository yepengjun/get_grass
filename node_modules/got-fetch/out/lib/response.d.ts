/**
 * Spec:
 * https://fetch.spec.whatwg.org/#response-class
 */
/// <reference types="node" />
import { IncomingHttpHeaders } from 'http2';
import { GotHeaders } from './headers';
declare type ResponseInit = {
    status?: number;
    statusText?: string | Buffer;
    headers?: IncomingHttpHeaders;
    url?: string;
    redirected?: boolean;
    type?: ResponseType;
};
export declare class GotFetchResponse implements Response {
    readonly headers: GotHeaders;
    readonly redirected: boolean;
    readonly status: number;
    readonly statusText: string;
    readonly url: string;
    readonly type: ResponseType;
    readonly body: any | null;
    constructor(body: BodyInit | null, init?: ResponseInit | null);
    get bodyUsed(): boolean;
    get ok(): boolean;
    get trailer(): Promise<Headers>;
    arrayBuffer(): Promise<ArrayBuffer>;
    blob(): Promise<Blob>;
    formData(): Promise<FormData>;
    json(): Promise<any>;
    text(): Promise<string>;
    clone(): GotFetchResponse;
    static error(): GotFetchResponse;
}
export {};
//# sourceMappingURL=response.d.ts.map